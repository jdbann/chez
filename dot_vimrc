set encoding=utf-8

" Leader
let mapleader = " "

set backspace=2   " Backspace deletes like most programs in insert mode
set nobackup
set nowritebackup
set noswapfile    " http://robots.thoughtbot.com/post/18739402579/global-gitignore#comment-458413287
set history=50
set ruler         " show the cursor position all the time
set showcmd       " display incomplete commands
set incsearch     " do incremental searching
set laststatus=2  " Always display the status line
set autowrite     " Automatically :write before running commands
set modelines=0   " Disable modelines as a security precaution
set nomodeline

" Switch syntax highlighting on, when the terminal has colors
" Also switch on highlighting the last used search pattern.
if (&t_Co > 2 || has("gui_running")) && !exists("syntax_on")
  syntax on
endif

" Enable ALE completion - has to be set before loading
let g:ale_completion_enabled = 1

" Load bundled plugins
if filereadable(expand("~/.vimrc.bundles"))
  source ~/.vimrc.bundles
endif

filetype plugin indent on

" Softtabs, 2 spaces
set tabstop=2
set shiftwidth=2
set shiftround
set expandtab

" Display extra whitespace
set list listchars=tab:»·,trail:·,nbsp:·

" Use one space, not two, after punctuation.
set nojoinspaces

" Make it obvious where 80 characters is
set textwidth=80
set colorcolumn=+1

" Numbers
set number
set numberwidth=5

" Open new split panes to right and bottom, which feels more natural
set splitbelow
set splitright

" Quicker window movement
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-h> <C-w>h
nnoremap <C-l> <C-w>l

" Always use vertical diffs
set diffopt+=vertical

" Map Ctrl + p to open fuzzy find (FZF)
nnoremap <c-p> :Files<cr>

" Enable 24 bit color
if (has("termguicolors"))
  let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
  let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"
  set termguicolors
endif

" Color scheme
colorscheme gruvbox

" Setup some linting and fixing with ale
let g:ale_linters = {
  \ 'css': ['stylelint'],
  \ 'javascript': ['prettier'],
  \ 'go': ['gopls', 'golangci-lint'],
  \ 'gohtmltmpl': ['prettier'],
  \ 'ruby': ['prettier', 'solargraph'],
  \ 'sql': ['pgformatter'],
  \}

let g:ale_fixers = {
  \ 'css': ['stylelint'],
  \ 'javascript': ['prettier'],
  \ 'gohtmltmpl': ['prettier'],
  \ 'ruby': ['prettier'],
  \ 'sql': ['pgformatter'],
  \}

" Fix files on save
let g:ale_fix_on_save = 1

" Not sure if this is what I think it is...
let g:ale_completion_autoimport = 1

" Options for golangci-lint
let g:ale_go_golangci_lint_options = ''
let g:ale_go_golangci_lint_package = 1

" Use ag in fzf for listing files. Lightning fast and respects .gitignore
let $FZF_DEFAULT_COMMAND = 'ag --literal --files-with-matches --nocolor --hidden -g ""'

" Use Ag over Grep
set grepprg=ag\ --nogroup\ --nocolor

" Use dispatch.vim to execute tests in tmux
let test#strategy = "dispatch"

" Move between linting errors
nnoremap ]r :ALENextWrap<CR>
nnoremap [r :ALEPreviousWrap<CR>

" vim-test mappings
nnoremap <silent> <Leader>t :TestFile<CR>
nnoremap <silent> <Leader>s :TestNearest<CR>
nnoremap <silent> <Leader>l :TestLast<CR>
nnoremap <silent> <Leader>a :TestSuite<CR>
nnoremap <silent> <Leader>gt :TestVisit<CR>

" Switch between the last two files
nnoremap <Leader><Leader> <C-^>
